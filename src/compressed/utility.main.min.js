/**
 * 
 * 
 * ░▒▓█▓▒░░▒▓█▓▒░░▒▓████████▓▒░░▒▓█▓▒░░▒▓█▓▒░       ░▒▓█▓▒░░▒▓████████▓▒░░▒▓█▓▒░░▒▓█▓▒░   ░▒▓█▓▒░ ░▒▓███████▓▒░
 * ░▒▓█▓▒░░▒▓█▓▒░   ░▒▓█▓▒░    ░▒▓█▓▒░░▒▓█▓▒░       ░▒▓█▓▒░   ░▒▓█▓▒░    ░▒▓█▓▒░░▒▓█▓▒░   ░▒▓█▓▒░░▒▓█▓▒░       
 * ░▒▓█▓▒░░▒▓█▓▒░   ░▒▓█▓▒░    ░▒▓█▓▒░░▒▓█▓▒░       ░▒▓█▓▒░   ░▒▓█▓▒░    ░▒▓█▓▒░░▒▓█▓▒░   ░▒▓█▓▒░░▒▓█▓▒░       
 * ░▒▓█▓▒░░▒▓█▓▒░   ░▒▓█▓▒░    ░▒▓█▓▒░░▒▓█▓▒░       ░▒▓█▓▒░   ░▒▓█▓▒░     ░▒▓██████▓▒░    ░▒▓█▓▒░ ░▒▓██████▓▒░ 
 * ░▒▓█▓▒░░▒▓█▓▒░   ░▒▓█▓▒░    ░▒▓█▓▒░░▒▓█▓▒░       ░▒▓█▓▒░   ░▒▓█▓▒░       ░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░       ░▒▓█▓▒░
 * ░▒▓█▓▒░░▒▓█▓▒░   ░▒▓█▓▒░    ░▒▓█▓▒░░▒▓█▓▒░       ░▒▓█▓▒░   ░▒▓█▓▒░       ░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░       ░▒▓█▓▒░
 *  ░▒▓██████▓▒░    ░▒▓█▓▒░    ░▒▓█▓▒░░▒▓████████▓▒░░▒▓█▓▒░   ░▒▓█▓▒░       ░▒▓█▓▒░ ░▒▓██████▓▒░ ░▒▓███████▓▒░ 
 * 
 * 
 * UtilityJs | main
 * Author: pixelThreader (Piyush Rana) 
 * @license MIT License 'https://raw.githubusercontent.com/piyush20B/UtilityJS/main/LICENSE'
 * 
 * A JavaScript utility library aiming to make life easier, save code,
 * and enhance productivity with a wide range of utilities.
 * 
 */
!function(e){"use strict";var r=function(e){return new r.fn.init(e)};r.info=function(){return{name:"UtilityJS",origin:"India",version:"1.0.0",author:"pixelThreader (Piyush Rana)",license:"MIT",lisenceUrl:"https://raw.githubusercontent.com/piyush20B/UtilityJS/main/LICENSE"}},r.fn=r.prototype={init:function(e){return e?(this.elements=document.querySelectorAll(e),this):this},eachone:function(e){return this.elements.forEach(((r,t)=>{e.call(r,t,r)})),this},classAdd:function(e){return this.eachone((function(){this.classList.add(e)}))},classRemove:function(e){return this.eachone((function(){this.classList.remove(e)}))},classToggle:function(e){return this.eachone((function(){this.classList.toggle(e)}))},attrAdd:function(e,r){return this.eachone((function(){this.setAttribute(e,r)}))},attrRemove:function(e){return this.eachone((function(){this.removeAttribute(e)}))},attr:function(e,r){return void 0===r?this.elements[0].getAttribute(e):this.eachone((function(){this.setAttribute(e,r)}))},remove:function(){return this.eachone((function(){this.parentNode.removeChild(this)}))},setOrGetHTML:function(e){return void 0===e?this.elements[0].innerHTML:this.eachone((function(){this.innerHTML=e}))},setOrGetText:function(e){return void 0===e?this.elements[0].textContent:this.eachone((function(){this.textContent=e}))},isClassPresent:function(e){return this.elements[0].classList.contains(e)},isAttrPresent:function(e){return this.elements[0].hasAttribute(e)},getStyle:function(e){return this.elements[0].style[e]},addStyle:function(e){return this.eachone((function(){for(let r in e)this.style[r]=e[r]}))},removeStyle:function(e){return this.eachone((function(){Array.isArray(e)?e.forEach((e=>{this.style[e]=""})):this.style[e]=""}))},create:function(e){var t=document.createElement(e);return r(t)},appendTo:function(e){let r=document.querySelector(e);return this.eachone((function(){r.appendChild(this)}))},prependTo:function(e){let r=document.querySelector(e);return this.eachone((function(){r.insertBefore(this,r.firstChild)}))},insertAfter:function(e){let r=document.querySelector(e);return this.eachone((function(){r.parentNode.insertBefore(this,r.nextSibling)}))},insertBefore:function(e){let r=document.querySelector(e);return this.eachone((function(){r.parentNode.insertBefore(this,r)}))}};["getAttribute","setAttribute","removeAttribute","addEventListener","removeEventListener","appendChild","removeChild","replaceChild","cloneNode","insertBefore","querySelector","querySelectorAll","focus","blur","click","classList","style"].forEach((function(e){r.fn[e]=function(){var r=arguments;if(this.elements.length>0&&"function"==typeof this.elements[0][e])return r.length>0?this.elements[0][e].apply(this.elements[0],r):this.elements[0][e]()}})),r.fn.init.prototype=r.fn,e.uts=e.utilitySelector=r}("undefined"!=typeof window?window:this);class StringUtility{validateString(e){if("string"!=typeof e)throw new Error("Input must be a string")}stringTrim(e){try{return this.validateString(e),e.trim()}catch(e){console.error("Error trimming string:",e.message)}}stringToUpperCase(e){try{return this.validateString(e),e.toUpperCase()}catch(e){console.error("Error converting string to uppercase:",e.message)}}stringToLowerCase(e){try{return this.validateString(e),e.toLowerCase()}catch(e){console.error("Error converting string to lowercase:",e.message)}}stringCapitalize(e){try{return this.validateString(e),e.charAt(0).toUpperCase()+e.slice(1).toLowerCase()}catch(e){console.error("Error capitalizing string:",e.message)}}stringCapitalizeEach(e){try{return this.validateString(e),e.split(" ").map((e=>e.charAt(0).toUpperCase()+e.slice(1))).join(" ")}catch(e){console.error("Error capitalizing string:",e.message)}}stringCamelCase(e){try{return this.validateString(e),e.toLowerCase().replace(/[^a-zA-Z0-9]+(.)/g,((e,r)=>r.toUpperCase()))}catch(e){console.error("Error converting string to camel case:",e.message)}}stringSnakeCase(e){try{return this.validateString(e),e.replace(/\W+/g," ").split(/ |\B(?=[A-Z])/).map((e=>e.toLowerCase())).join("_")}catch(e){console.error("Error converting string to snake case:",e.message)}}stringKebabCase(e){try{return this.validateString(e),e.replace(/\W+/g," ").split(/ |\B(?=[A-Z])/).map((e=>e.toLowerCase())).join("-")}catch(e){console.error("Error converting string to kebab case:",e.message)}}stringReverse(e){try{return this.validateString(e),e.split("").reverse().join("")}catch(e){console.error("Error reversing string:",e.message)}}stringIncludes(e,r){try{return this.validateString(e),this.validateString(r),e.includes(r)}catch(e){console.error("Error checking if string includes substring:",e.message)}}stringStartsWith(e,r){try{return this.validateString(e),this.validateString(r),e.startsWith(r)}catch(e){console.error("Error checking if string starts with substring:",e.message)}}stringEndsWith(e,r){try{return this.validateString(e),this.validateString(r),e.endsWith(r)}catch(e){console.error("Error checking if string ends with substring:",e.message)}}stringRepeat(e,r){try{if(this.validateString(e),"number"!=typeof r||r<0)throw new Error("Times must be a non-negative number");return e.repeat(r)}catch(e){console.error("Error repeating string:",e.message)}}stringReplace(e,r,t){try{this.validateString(e),this.validateString(r),this.validateString(t);const n=new RegExp(r,"g"),i=e.replace(n,t);if(i===e)throw new Error(`No matches found for "${r}"`);return i}catch(e){console.error("Error replacing substring in string:",e.message)}}stringEscape(e){try{return this.validateString(e),e.replace(/[.*+?^${}()|[\]\\]/g,"")}catch(e){console.error("Error escaping string:",e.message)}}stringPadStart(e,r,t){try{if(this.validateString(e),this.validateString(t),"number"!=typeof r||r<0)throw new Error("Target length must be a non-negative number");return e.padStart(r,t)}catch(e){console.error("Error padding start of string:",e.message)}}stringPadEnd(e,r,t){try{if(this.validateString(e),this.validateString(t),"number"!=typeof r||r<0)throw new Error("Target length must be a non-negative number");return e.padEnd(r,t)}catch(e){console.error("Error padding end of string:",e.message)}}stringSplit(e,r){try{return this.validateString(e),e.split(r)}catch(e){console.error("Error splitting string:",e.message)}}stringTemplate(e,r){try{return this.validateString(e),e.replace(/\${(.*?)}/g,((e,t)=>r[t.trim()]))}catch(e){console.error("Error creating template string:",e.message)}}}class NumberUtility{validateNumber(e){if("number"!=typeof e||isNaN(e))throw new Error("Input must be a valid number")}numberIsInteger(e){try{return this.validateNumber(e),Number.isInteger(e)}catch(e){console.error("Error checking if number is integer:",e.message)}}numberIsFloat(e){try{return this.validateNumber(e),!Number.isInteger(e)}catch(e){console.error("Error checking if number is float:",e.message)}}numberIsEven(e){try{return this.validateNumber(e),e%2==0}catch(e){console.error("Error checking if number is even:",e.message)}}numberIsOdd(e){try{return this.validateNumber(e),e%2!=0}catch(e){console.error("Error checking if number is odd:",e.message)}}numberClamp(e,r,t){try{if(this.validateNumber(e),this.validateNumber(r),this.validateNumber(t),r>t)throw new Error("Minimum value cannot be greater than maximum value");return Math.min(Math.max(e,r),t)}catch(e){console.error("Error clamping number:",e.message)}}numberRandom(e,r){try{if(this.validateNumber(e),this.validateNumber(r),e>r)throw new Error("Minimum value cannot be greater than maximum value");return Math.random()*(r-e)+e}catch(e){console.error("Error generating random number:",e.message)}}numberToFixed(e,r){try{if(this.validateNumber(e),!Number.isInteger(r)||r<0)throw new Error("Digits must be a non-negative integer");return e.toFixed(r)}catch(e){console.error("Error formatting number to fixed:",e.message)}}numberToPrecision(e,r){try{if(this.validateNumber(e),!Number.isInteger(r)||r<1)throw new Error("Precision must be a positive integer");return e.toPrecision(r)}catch(e){console.error("Error formatting number to precision:",e.message)}}numberToCurrency(e,r="en-US",t="USD"){try{return this.validateNumber(e),e.toLocaleString(r,{style:"currency",currency:t})}catch(e){console.error("Error formatting number to currency:",e.message)}}numberParseInt(e,r=10){try{if("string"!=typeof e)throw new Error("Input must be a string");return parseInt(e,r)}catch(e){console.error("Error parsing string to integer:",e.message)}}numberParseFloat(e){try{if("string"!=typeof e)throw new Error("Input must be a string");return parseFloat(e)}catch(e){console.error("Error parsing string to float:",e.message)}}numberRound(e){try{return this.validateNumber(e),Math.round(e)}catch(e){console.error("Error rounding number:",e.message)}}numberCeil(e){try{return this.validateNumber(e),Math.ceil(e)}catch(e){console.error("Error rounding number up:",e.message)}}numberFloor(e){try{return this.validateNumber(e),Math.floor(e)}catch(e){console.error("Error rounding number down:",e.message)}}numberMin(...e){try{return e.forEach(this.validateNumber),Math.min(...e)}catch(e){console.error("Error finding minimum number:",e.message)}}numberMax(...e){try{return e.forEach(this.validateNumber),Math.max(...e)}catch(e){console.error("Error finding maximum number:",e.message)}}numberSum(...e){try{return e.forEach(this.validateNumber),e.reduce(((e,r)=>e+r),0)}catch(e){console.error("Error summing numbers:",e.message)}}numberAverage(...e){try{return e.forEach(this.validateNumber),this.numberSum(...e)/e.length}catch(e){console.error("Error calculating average:",e.message)}}numberMedian(...e){try{e.forEach(this.validateNumber),e.sort(((e,r)=>e-r));const r=Math.floor(e.length/2);return e.length%2!=0?e[r]:(e[r-1]+e[r])/2}catch(e){console.error("Error calculating median:",e.message)}}numberMode(...e){try{e.forEach(this.validateNumber);const r={};e.forEach((e=>r[e]=(r[e]||0)+1));const t=Math.max(...Object.values(r));return Object.keys(r).filter((e=>r[e]===t)).map(Number)}catch(e){console.error("Error finding mode of numbers:",e.message)}}}class HtmlUtility{stringToHTML(e){var r=document.createElement("div");return r.innerHTML=e.replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/&amp;/g,"&").replace(/&quot;/g,'"').replace(/&#039;/g,"'"),r.innerHTML}stringFormat(e,r,t={}){const n=Object.keys(t).map((e=>`${e}="${t[e]}"`)).join(" ");return n?`<${r} ${n}>${e}</${r}>`:`<${r}>${e}</${r}>`}escapeHTML(e){const r=document.createElement("div");return r.appendChild(document.createTextNode(e)),r.innerHTML}boldString(e,r={}){return this.stringFormat(e,"b",r)}italicString(e,r={}){return this.stringFormat(e,"i",r)}underlineString(e,r={}){return this.stringFormat(e,"u",r)}createAnchor(e,r,t={}){return`<a href="${r}" ${Object.keys(t).map((e=>`${e}="${t[e]}"`)).join(" ")}>${e}</a>`}createListItem(e,r={}){return this.stringFormat(e,"li",r)}createParagraph(e,r={}){return this.stringFormat(e,"p",r)}createHeading(e,r,t={}){if(r<1||r>6)throw new Error("Heading level must be between 1 and 6");return this.stringFormat(e,`h${r}`,t)}createSpan(e,r={}){return this.stringFormat(e,"span",r)}stringToDiv(e,r={}){return this.stringFormat(e,"div",r)}stringToButton(e,r={}){return this.stringFormat(e,"button",r)}createTableCell(e,r={}){return this.stringFormat(e,"td",r)}createTableRow(e,r={}){return this.stringFormat(e,"tr",r)}createUnorderedList(e,r={},t={}){return`<ul ${Object.keys(r).map((e=>`${e}="${r[e]}"`)).join(" ")}>${e.map((e=>this.createListItem(e,t))).join("")}</ul>`}createOrderedList(e,r={},t={}){return`<ol ${Object.keys(r).map((e=>`${e}="${r[e]}"`)).join(" ")}>${e.map((e=>this.createListItem(e,t))).join("")}</ol>`}wrapWithTag(e,r,t={}){return`<${r} ${Object.keys(t).map((e=>`${e}="${t[e]}"`)).join(" ")}>${e}</${r}>`}highlightString(e,r={}){return this.stringFormat(e,"mark",r)}createBlockquote(e,r={}){return this.stringFormat(e,"blockquote",r)}createCodeBlock(e,r={},t={}){const n=Object.keys(r).map((e=>`${e}="${r[e]}"`)).join(" "),i=Object.keys(t).map((e=>`${e}="${t[e]}"`)).join(" ");return n?`<pre ${n}><code>${this.escapeHTML(e)}</code></pre>`:i?`<pre><code ${i}>${this.escapeHTML(e)}</code></pre>`:n&&i?`<pre ${n}><code ${i}>${this.escapeHTML(e)}</code></pre>`:`<pre><code>${this.escapeHTML(e)}</code></pre>`}createLabel(e,r={}){return this.stringFormat(e,"label",r)}}class ArrayUtility{arrayChunk(e,r){const t=[];for(let n=0;n<e.length;n+=r)t.push(e.slice(n,n+r));return t}arrayFlatten(e){return e.reduce(((e,r)=>e.concat(Array.isArray(r)?this.arrayFlatten(r):r)),[])}arrayUnique(e){return[...new Set(e)]}arrayDifference(e,r){return e.filter((e=>!r.includes(e)))}arrayIntersection(e,r){return e.filter((e=>r.includes(e)))}arrayUnion(e,r){return this.arrayUnique([...e,...r])}arrayRemove(e,r){return e.filter((e=>e!==r))}arrayShuffle(e){for(let r=e.length-1;r>0;r--){const t=Math.floor(Math.random()*(r+1));[e[r],e[t]]=[e[t],e[r]]}return e}arrayCompact(e){return e.filter(Boolean)}arraySort(e,r){return e.sort(r)}arrayMerge(...e){return[].concat(...e)}arrayClone(e){return[...e]}arrayFilter(e,r){return e.filter(r)}arrayMap(e,r){return e.map(r)}arrayReduce(e,r,t){return e.reduce(r,t)}arrayFind(e,r){return e.find(r)}arrayEvery(e,r){return e.every(r)}arraySome(e,r){return e.some(r)}arrayIncludes(e,r){return e.includes(r)}arraySlice(e,r,t){return e.slice(r,t)}}class ObjectUtility{objectClone(e){return{...e}}objectMerge(...e){return Object.assign({},...e)}objectDeepMerge(...e){const r=e=>e&&"object"==typeof e;return e.reduce(((e,t)=>(Object.keys(t).forEach((n=>{const i=e[n],s=t[n];Array.isArray(i)&&Array.isArray(s)?e[n]=i.concat(...s):r(i)&&r(s)?e[n]=this.objectDeepMerge(i,s):e[n]=s})),e)),{})}objectKeys(e){return Object.keys(e)}objectValues(e){return Object.values(e)}objectEntries(e){return Object.entries(e)}objectFromEntries(e){return Object.fromEntries(e)}objectHasKey(e,r){return e.hasOwnProperty(r)}objectOmit(e,r){const t={...e};return r.forEach((e=>delete t[e])),t}objectPick(e,r){const t={};return r.forEach((r=>{r in e&&(t[r]=e[r])})),t}objectDeepFreeze(e){return Object.freeze(e),Object.keys(e).forEach((r=>{"object"!=typeof e[r]||null===e[r]||Object.isFrozen(e[r])||this.objectDeepFreeze(e[r])})),e}objectDeepClone(e){return JSON.parse(JSON.stringify(e))}objectDeepEqual(e,r){return JSON.stringify(e)===JSON.stringify(r)}objectGet(e,r){return r.split(".").reduce(((e,r)=>e&&void 0!==e[r]?e[r]:void 0),e)}objectSet(e,r,t){const n=r.split(".");let i=e;return n.slice(0,-1).forEach(((e,r)=>{i[e]||(i[e]={}),i=i[e]})),i[n[n.length-1]]=t,e}objectMap(e,r){return Object.fromEntries(Object.entries(e).map((([e,t])=>[e,r(t,e)])))}objectFilter(e,r){return Object.fromEntries(Object.entries(e).filter((([e,t])=>r(t,e))))}objectReduce(e,r,t){return Object.entries(e).reduce(((e,[t,n])=>r(e,n,t)),t)}objectFindKey(e,r){return Object.keys(e).find((t=>r(e[t],t)))}objectFindValue(e,r){return Object.values(e).find((e=>r(e)))}}class BoolUtility{isNull(e){return null===e}isUndefined(e){return void 0===e}isObject(e){return null!==e&&"object"==typeof e&&!Array.isArray(e)}isArray(e){return Array.isArray(e)}isFunction(e){return"function"==typeof e}isString(e){return"string"==typeof e}isNumber(e){return"number"==typeof e&&!isNaN(e)}isBoolean(e){return"boolean"==typeof e}isDate(e){return e instanceof Date&&!isNaN(e)}isRegExp(e){return e instanceof RegExp}isPromise(e){return e instanceof Promise}isSymbol(e){return"symbol"==typeof e}isPrimitive(e){return e!==Object(e)}isIterable(e){return null!=e&&"function"==typeof e[Symbol.iterator]}times(e,r){return Array.from({length:e},((e,t)=>r(t)))}delay(e,r,...t){return setTimeout(e,r,...t)}}